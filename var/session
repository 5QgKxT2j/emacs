;;; Automatically generated on Tue Dec  2 16:45:16 2014
;;; Invoked by k-ohsugi@localhost using 24.4.1
(setq-default session-file-alist '(("~/.emacs.d/elpa/org-20141201/org-loaddefs.el" 86415 nil 1 nil nil 86415 (overwrite-mode)) ("~/.emacs.d/elpa/dash-20141201.2153/dash-autoloads.el" 222 nil 1 nil nil 222 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141201.222/helm-autoloads.el" 38565 nil 1 nil nil 38565 (overwrite-mode)) ("~/.emacs.d/elpa/org-20141201/org-autoloads.el" 26113 nil 1 nil nil 26113 (overwrite-mode)) ("/mnt/Dropbox/research/meeting/ICN-meeting.org" 1213 942 1 nil nil 1213 (overwrite-mode)) ("/mnt/Dropbox/research/ex_data/141124/clock_cycles1.data" 32683 nil 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/research/meeting/ICN-meeting.tex" 52941 nil 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/var/recentf" 21072 nil 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141130.643/helm-autoloads.el" 38521 nil 1 nil nil 38521 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141130.100/helm-autoloads.el" 38560 nil 1 nil nil 38560 (overwrite-mode)) ("~/.emacs.d/elpa/org-20141124/org-loaddefs.el" 86416 nil 1 nil nil 86416 (overwrite-mode)) ("~/.emacs.d/elpa/org-20141124/org-autoloads.el" 26103 nil 1 nil nil 26103 (overwrite-mode)) ("/mnt/Dropbox/storage/application/seminar_report.org" 498 347 1 nil nil 635 (overwrite-mode)) ("/mnt/Dropbox/storage/application/seminar_report.tex" 1145 nil 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141125.2040/helm-autoloads.el" 38381 nil 1 nil nil 38381 (overwrite-mode)) ("~/.emacs.d/elpa/math-symbol-lists-20141126.1508/math-symbol-lists-autoloads.el" 256 nil 1 nil nil 256 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141125.514/helm-autoloads.el" 38373 nil 1 nil nil 38373 (overwrite-mode)) ("/mnt/Dropbox/research/ex_data/141124/INTEREST_03.PIT_INSERT.dat" 59929 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/stream-face.hpp" 8265 8234 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/websocket-face.cpp" 3707 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/local-face.hpp" 6637 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/ethernet-face.cpp" 9045 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/datagram-face.hpp" 8169 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/tcp-face.hpp" 982 nil 1 nil nil nil (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/fw/forwarder.cpp" 13513 13520 1 nil nil 12948 (overwrite-mode)) ("/ssh:client1@192.168.10.85:/home/client1/test_application/client.cpp" 1724 nil 1 nil nil 2714 (overwrite-mode)) ("/mnt/Dropbox/research/utils/calc_avg_clock_cycles.sh" 186 83 1 nil nil 186 (overwrite-mode)) ("/mnt/Dropbox/research/utils/plot_clock_cycle.R" 1 159 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/research/utils/calc_avg_clock_cycles.R" 152 98 1 nil nil 140 (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/main.cpp" 11317 nil 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/research/utils/plot_clock_cycle.sh" 132 76 1 nil nil 73 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/face/unix-stream-face.cpp" 2044 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/tests/core/event-emitter.cpp" 5403 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/src/util/event-emitter.hpp" 8798 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/tests/unit-tests/util/test-event-emitter.cpp" 6513 nil 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/hoge.txt" 1 173 1 nil nil 165 (overwrite-mode)) ("/mnt/Dropbox/research/utils/split_block.sh" 26 nil 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/research/ex_data/141124/DATA_10.GOTO_OUTGOING_DATA_PIPELINE.dat" 9702 nil 1 nil nil nil (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/table/cs.cpp" 7674 1932 1 nil nil 12199 (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/fw/forwarder.hpp" 5463 6146 1 nil nil 6210 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/mgmt/app-face.hpp" 1699 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/fw/forwarder.cpp" 2784 12374 1 nil nil 12375 (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/docs/tutorials/security-library.rst" 11678 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/fw/forwarder.hpp" 4997 6013 1 nil nil 6014 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/tests/daemon/fw/forwarder.cpp" 11444 nil 1 nil nil 11444 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141123.57/helm-autoloads.el" 38383 nil 1 nil nil 38383 (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/src/util/command-interest-validator.hpp" 9846 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/onIncomingInterest.txt" 3371 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/tests/daemon/mgmt/internal-face.cpp" 6513 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/src/face.cpp" 14253 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/tests/daemon/fw/client-control-strategy.cpp" 3991 nil 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141119.207/helm-autoloads.el" 38342 nil 1 nil nil 38342 (overwrite-mode)) ("~/.emacs.d/elpa/popup-20141120.1742/popup-autoloads.el" 223 nil 1 nil nil 223 (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/table/pit.cpp" 3909 3139 1 nil nil 3614 (overwrite-mode)) ("/ssh:router@192.168.10.80:/home/router/NFD-NFD-0.2.0/daemon/table/name-tree.cpp" 1338 5794 1 nil nil 1338 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/table/name-tree.cpp" 2616 2943 1 nil nil 11958 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/table/name-tree.hpp" 1 8140 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/table/pit.cpp" 1784 nil 1 nil nil nil (overwrite-mode)) ("/mnt/Dropbox/storage/scfes.org" 211 34 1 nil nil 25 (overwrite-mode)) ("/mnt/Dropbox/storage/web/committee.html" 1878 1609 1 nil nil 1271 (overwrite-mode)) ("/mnt/Dropbox/storage/web/index.html" 4879 4878 1 nil nil 4892 (overwrite-mode)) ("~/.emacs.d/elpa/org-20141117/org-loaddefs.el" 86416 nil 1 nil nil 86416 (overwrite-mode)) ("~/.emacs.d/elpa/ac-math-20141116.1327/ac-math-autoloads.el" 705 nil 1 nil nil 705 (overwrite-mode)) ("~/.emacs.d/elpa/math-symbol-lists-20141116.1252/math-symbol-lists-autoloads.el" 91155 nil 1 nil nil 91155 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141117.426/helm-autoloads.el" 38386 nil 1 nil nil 38386 (overwrite-mode)) ("~/.emacs.d/elpa/org-20141117/org-autoloads.el" 26113 nil 1 nil nil 26113 (overwrite-mode)) ("~/.emacs.d/elpa/yasnippet-20141117.327/yasnippet-autoloads.el" 1534 nil 1 nil nil 1534 (overwrite-mode)) ("~/.emacs.d/elpa/ac-math-20141115.1617/ac-math-autoloads.el" 1119 nil 1 nil nil 1119 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20141114.2229/helm-autoloads.el" 38375 nil 1 nil nil 38375 (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/src/transport/stream-transport.hpp" 9762 5012 1 nil nil 5012 (overwrite-mode)) ("/ssh:server2@192.168.10.91:/home/server2/test_application/server.cpp" 3740 nil 1 nil nil nil (overwrite-mode)) ("/ssh:client2@192.168.10.86:/home/client2/test_application/client.cpp" 2451 nil 1 nil nil nil (overwrite-mode)) ("/ssh:server1@192.168.10.90:/home/server1/test_application/server.cpp" 3399 2734 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/rib/main.cpp" 1572 nil 1 nil nil 7154 (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/daemon/mgmt/face-manager.cpp" 3768 7671 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/docs/overview.rst" 3525 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/NFD-NFD-0.2.0/docs/RELEASE_NOTES.rst" 9885 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/onIncomingData.txt" 3365 nil 1 nil nil nil (overwrite-mode)) ("~/Downloads/ndn-cxx-ndn-cxx-0.2.0/tests/unit-tests/test-data.cpp" 17853 nil 1 nil nil nil (overwrite-mode))))
(setq-default buffer-name-history '("*Moccur*" "ssh:name-tree.cpp" "*scratch*" "Downloads" "name-tree.cpp" "name-tree.hpp" "forwarder.hpp" "*tramp/ssh client2@192.168.10.86*"))
(setq-default command-history '((package-list-packages nil) (count-words nil nil)))
(setq-default extended-command-history '("package-list-packages" "count-words" "moccur-grep-find"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless (equal i (quote (helm-complex-command-history))) collect (prin1-to-string i))) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda (candidate) (let ((items (split-string candidate ":"))) (helm-switch-to-buffer (cl-second items)) (helm-goto-line (string-to-number (car items)))))) (persistent-action lambda (candidate) (let ((items (split-string candidate ":"))) (helm-switch-to-buffer (cl-second items)) (helm-goto-line (string-to-number (car items))) (helm-highlight-current-line))) (persistent-help . "Show this line")))
(setq-default helm-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset (quote last-command) last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda (candidate) (cl-loop for cand in (helm-marked-candidates) do (setq kill-ring (delete cand kill-ring))))) (persistent-action lambda (_candidate) (ignore)) (persistent-help . "DoNothing") (keymap keymap (27 keymap (117 . helm-previous-line) (121 . helm-next-line)) keymap (f13 lambda nil #1=(interactive) (helm-select-nth-action 12)) (f12 lambda nil #1# (helm-select-nth-action 11)) (f11 lambda nil #1# (helm-select-nth-action 10)) (f10 lambda nil #1# (helm-select-nth-action 9)) (f9 lambda nil #1# (helm-select-nth-action 8)) (f8 lambda nil #1# (helm-select-nth-action 7)) (f7 lambda nil #1# (helm-select-nth-action 6)) (f6 lambda nil #1# (helm-select-nth-action 5)) (f5 lambda nil #1# (helm-select-nth-action 4)) (f4 lambda nil #1# (helm-select-nth-action 3)) (f3 lambda nil #1# (helm-select-nth-action 2)) (f2 lambda nil #1# (helm-select-nth-action 1)) (menu-bar keymap (help-menu keymap (describe keymap (describe-mode . helm-help)))) (help keymap (109 . helm-help)) (f1 lambda nil #1# (helm-select-nth-action 0)) (8 . delete-backward-char) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (triple-mouse-3 . ignore) (double-mouse-3 . ignore) (mouse-3 . ignore) (drag-mouse-3 . ignore) (down-mouse-3 . ignore) (triple-mouse-2 . ignore) (double-mouse-2 . ignore) (mouse-2 . ignore) (drag-mouse-2 . ignore) (down-mouse-2 . ignore) (triple-mouse-1 . ignore) (double-mouse-1 . ignore) (mouse-1 . ignore) (drag-mouse-1 . ignore) (down-mouse-1 . ignore) (67108897 . helm-toggle-suspend-update) (3 keymap (1 . all-from-helm-occur) (21 . helm-force-update) (6 . helm-follow-mode) (9 . helm-copy-to-buffer) (11 . helm-kill-selection-and-quit) (25 . helm-yank-selection) (4 . helm-delete-current-selection) (45 . helm-swap-windows)) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap (2 . helm-resume-list-buffers-after-quit) (98 . helm-resume-previous-session-after-quit) (6 . helm-quit-and-find-file)) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (0 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-execute-persistent-action) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-maybe-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap (110 . next-history-element) (112 . previous-history-element) (115 . undefined) (5 . helm-display-all-sources) (1 . helm-show-all-in-this-source-only) (117 . helm-unmark-all) (97 . helm-mark-all) (109 . helm-toggle-all-marks) (41 . helm-next-visible-mark) (40 . helm-prev-visible-mark) (91) (32 . helm-toggle-visible-mark) (33554454 . helm-scroll-other-window-down) (25 . helm-scroll-other-window-down) (22 . helm-scroll-other-window) (12 . helm-reposition-window-other-window) (62 . helm-end-of-buffer) (60 . helm-beginning-of-buffer) (118 . helm-previous-page)) (next . helm-next-page) (prior . helm-previous-page) (C-up . helm-follow-action-backward) (C-down . helm-follow-action-forward) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (26 . undefined) (18 . helm-minibuffer-history) (S-tab . zlc-select-previous) (backtab . zlc-select-previous) (menu-bar keymap (minibuf #2="Minibuf" keymap (previous menu-item "Previous History Item" previous-history-element :help "Put previous minibuffer history element in the minibuffer") (next menu-item "Next History Item" next-history-element :help "Put next minibuffer history element in the minibuffer") (isearch-backward menu-item "Isearch History Backward" isearch-backward :help "Incrementally search minibuffer history backward") (isearch-forward menu-item "Isearch History Forward" isearch-forward :help "Incrementally search minibuffer history forward") (return menu-item "Enter" exit-minibuffer :key-sequence "" :help "Terminate input and exit minibuffer") (quit menu-item "Quit" abort-recursive-edit :help "Abort input and exit minibuffer") #2#)) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . minibuffer-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap (63 . session-minibuffer-history-help) (114 . previous-matching-history-element) (115 . next-matching-history-element) (112 . previous-history-element) (110 . next-history-element))) (last-command . helm-show-kill-ring) (migemo) (multiline)))
(setq-default helm-c-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda (candidate) (helm-goto-line (string-to-number candidate)))) (persistent-action lambda (candidate) (helm-goto-line (string-to-number candidate)) (helm-highlight-current-line)) (persistent-help . "Show this line")))
(setq-default helm-source--ff-file-name-history '((name . "File name history") (init lambda nil (with-helm-alive-p (when helm-ff-file-name-history-use-recentf (require (quote recentf)) (or recentf-mode (recentf-mode 1))))) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda (candidate) (helm-set-pattern (expand-file-name candidate)) (with-helm-after-update-hook (helm-exit-minibuffer))) ("Find file in helm" lambda (candidate) (helm-set-pattern (expand-file-name candidate))))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless (equal i (quote (helm-complex-command-history))) collect (prin1-to-string i))) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda (candidate) (let ((items (split-string candidate ":"))) (helm-switch-to-buffer (cl-second items)) (helm-goto-line (string-to-number (car items)))))) (persistent-action lambda (candidate) (let ((items (split-string candidate ":"))) (helm-switch-to-buffer (cl-second items)) (helm-goto-line (string-to-number (car items))) (helm-highlight-current-line))) (persistent-help . "Show this line")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset (quote last-command) last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda (candidate) (cl-loop for cand in (helm-marked-candidates) do (setq kill-ring (delete cand kill-ring))))) (persistent-action lambda (_candidate) (ignore)) (persistent-help . "DoNothing") (keymap keymap (27 keymap (117 . helm-previous-line) (121 . helm-next-line)) keymap (f13 lambda nil #1=(interactive) (helm-select-nth-action 12)) (f12 lambda nil #1# (helm-select-nth-action 11)) (f11 lambda nil #1# (helm-select-nth-action 10)) (f10 lambda nil #1# (helm-select-nth-action 9)) (f9 lambda nil #1# (helm-select-nth-action 8)) (f8 lambda nil #1# (helm-select-nth-action 7)) (f7 lambda nil #1# (helm-select-nth-action 6)) (f6 lambda nil #1# (helm-select-nth-action 5)) (f5 lambda nil #1# (helm-select-nth-action 4)) (f4 lambda nil #1# (helm-select-nth-action 3)) (f3 lambda nil #1# (helm-select-nth-action 2)) (f2 lambda nil #1# (helm-select-nth-action 1)) (menu-bar keymap (help-menu keymap (describe keymap (describe-mode . helm-help)))) (help keymap (109 . helm-help)) (f1 lambda nil #1# (helm-select-nth-action 0)) (8 . delete-backward-char) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (triple-mouse-3 . ignore) (double-mouse-3 . ignore) (mouse-3 . ignore) (drag-mouse-3 . ignore) (down-mouse-3 . ignore) (triple-mouse-2 . ignore) (double-mouse-2 . ignore) (mouse-2 . ignore) (drag-mouse-2 . ignore) (down-mouse-2 . ignore) (triple-mouse-1 . ignore) (double-mouse-1 . ignore) (mouse-1 . ignore) (drag-mouse-1 . ignore) (down-mouse-1 . ignore) (67108897 . helm-toggle-suspend-update) (3 keymap (1 . all-from-helm-occur) (21 . helm-force-update) (6 . helm-follow-mode) (9 . helm-copy-to-buffer) (11 . helm-kill-selection-and-quit) (25 . helm-yank-selection) (4 . helm-delete-current-selection) (45 . helm-swap-windows)) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap (2 . helm-resume-list-buffers-after-quit) (98 . helm-resume-previous-session-after-quit) (6 . helm-quit-and-find-file)) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (0 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-execute-persistent-action) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-maybe-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap (110 . next-history-element) (112 . previous-history-element) (115 . undefined) (5 . helm-display-all-sources) (1 . helm-show-all-in-this-source-only) (117 . helm-unmark-all) (97 . helm-mark-all) (109 . helm-toggle-all-marks) (41 . helm-next-visible-mark) (40 . helm-prev-visible-mark) (91) (32 . helm-toggle-visible-mark) (33554454 . helm-scroll-other-window-down) (25 . helm-scroll-other-window-down) (22 . helm-scroll-other-window) (12 . helm-reposition-window-other-window) (62 . helm-end-of-buffer) (60 . helm-beginning-of-buffer) (118 . helm-previous-page)) (next . helm-next-page) (prior . helm-previous-page) (C-up . helm-follow-action-backward) (C-down . helm-follow-action-forward) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (26 . undefined) (18 . helm-minibuffer-history) (S-tab . zlc-select-previous) (backtab . zlc-select-previous) (menu-bar keymap (minibuf #2="Minibuf" keymap (previous menu-item "Previous History Item" previous-history-element :help "Put previous minibuffer history element in the minibuffer") (next menu-item "Next History Item" next-history-element :help "Put next minibuffer history element in the minibuffer") (isearch-backward menu-item "Isearch History Backward" isearch-backward :help "Incrementally search minibuffer history backward") (isearch-forward menu-item "Isearch History Forward" isearch-forward :help "Incrementally search minibuffer history forward") (return menu-item "Enter" exit-minibuffer :key-sequence "" :help "Terminate input and exit minibuffer") (quit menu-item "Quit" abort-recursive-edit :help "Abort input and exit minibuffer") #2#)) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . minibuffer-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap (63 . session-minibuffer-history-help) (114 . previous-matching-history-element) (115 . next-matching-history-element) (112 . previous-history-element) (110 . next-history-element))) (last-command . helm-show-kill-ring) (migemo) (multiline)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda (candidate) (helm-goto-line (string-to-number candidate)))) (persistent-action lambda (candidate) (helm-goto-line (string-to-number candidate)) (helm-highlight-current-line)) (persistent-help . "Show this line")))
(setq-default minibuffer-history '("pac" "org icn " "-------" "pack" #("私は，私自信が豊かな人生を送るために働きたいと考えています．豊かな人生" 0 2 (org-category #1="seminar_report" fontified t) 2 18 (fontified t) 18 29 (org-category #1# fontified t) 29 35 (fontified t)) #("精神的な豊かさも得ることができると考えられます．" 0 23 (fontified t) 23 24 (fontified t)) #("は心を鍛え，人間性を高めてくれると述べています．" 0 2 (org-category #1="seminar_report" fontified t) 2 4 (org-category #1# fontified t) 4 6 (org-category #1# fontified t) 6 13 (org-category #1# fontified t) 13 23 (org-category #1# fontified t) 23 24 (org-category #1# fontified t)) "count" "org" "icn org" "decodeAndDispatchInput " #("WT300_VCplusplus_Demo_Src_for_2010" 0 34 (fontified t help-echo "mouse-2: visit this file in other window" mouse-face highlight dired-filename t)) "mo" "stream-face.hpp " "EventEmitter " "icn" ".r" "plot" "router " "ssh cli" "org " "oninterest " "onIncomingInterest" "onincominginterest " "afterReceiveInterest " "fo" "p" "cs" "pit" "nBuckets " #("m_nBuckets" 0 10 (fontified t)) "m_enlarge " #("nBuckets" 0 8 (fontified t)) "m_enlargeThreshold " #("NFD-NFD-0" 0 9 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" mouse-face highlight dired-filename t)) "cs." "commi" "com" "scfes" #("std" 0 1 (fontified t face font-lock-constant-face c-is-sws t) 1 3 (fontified t face font-lock-constant-face)) "ssh router"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("" "" "//std::cout" "std::cout" "cout" "a" "t" "//cout" "nint" "10" "ndata" "1024" "256" "/d/" "/a/" "/c/" "/b/" "4096"))
(setq-default regexp-history '("decodeAndDispatchInput" "stream-face.hpp" "EventEmitter" "oninterest" "onIncomingInterest" "onincominginterest" "afterReceiveInterest" "nBuckets" "m_enlarge" "m_enlargeThreshold" "connect" "error while connecting to the forwarder (No such file or" "/nfd.sock" "socket" "pipe" "mkfifo" "namespace" "ndn::make_shared" "make_shared"))
(setq-default search-ring '("goto" "coutgoto" "data" "pit_match" "pit" "cout" "localhost" "scope" "cleanupindex" "get_interest" "getin" "find" "insert" "c2"))
