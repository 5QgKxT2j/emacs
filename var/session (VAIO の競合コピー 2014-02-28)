;;; Automatically generated on Wed Feb 26 22:50:21 2014
;;; Invoked by k-ohsugi@VAIO using 24.3.1
(setq-default kill-ring '(#("| 幼年期の終わり                      |      |
" 0 39 (face org-table fontified t) 39 40 (fontified t)) #("
" 0 1 (fontified t)) #("tori2009 年 3 月 関西大倉高等学校 卒業
2009 年 4 月 大阪大学 基礎工学部 情報科学科 入学
2013 年 3 月 大阪大学基礎工学部 情報科学科 卒業
2013 年 4 月 大阪大学大学院 情報科学研究科 情報ネットワーク学専攻 入学
2015 年 3 月 大阪大学大学院 情報科学研究科 情報ネットワーク学専攻 卒業見込

" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 26 (fontified t) 26 27 (fontified t) 27 57 (fontified t) 57 58 (fontified t) 58 87 (fontified t) 87 88 (fontified t) 88 129 (fontified t) 129 130 (fontified t) 130 173 (fontified t) 173 174 (fontified t) 174 175 (fontified t)) "tori" #("ました．" 0 3 (fontified t) 3 4 (fontified t)) #("以上の理由により貴社のテクニカルエンジニアを志望して
います．" 0 10 (fontified t) 10 17 (fontified t) 17 24 (fontified t) 24 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t)) #("

スマートシ" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t)) #(" IT と社会インフラ
" 0 1 (fontified t) 1 2 (fontified t) 2 11 (fontified t) 11 12 (fontified t)) #("貴社は， IT と社会インフラ事業の両方に強みを持ち，公共
性の高いシステムを数多く構築してきた実績を持っているため" 0 58 (fontified t)) #("私は，貴社のフィールドを利用してスマートシティを実現したいです．街全体
がシステム化領域であるという規模の大きさと，重要インフラの構築に携われ
るというやりがいが魅力的だと感じるからです．私は，特に設計部分に携わり
たいと考えております．街に住む人すべてがユーザであるため，障害が発生し
てしまうと広範囲の人々に大きな影響を与えてしまいます．そのため，設計す
る際には，システムのロバスト性やスケーラビリティに細心の注意を払う必要
があり，大きなプレッシャーとなりますが，その分多くのノウハウと仕事の重
要性を学ぶことができると思います．さらに，スマートシティは様々な国で導
入されると予想されるため，国内外を問わず活躍できるような人材へと成長し
ていけるという点にも取り組む意義を感じます．貴社は，" 0 2 (fontified t) 2 3 (fontified t) 3 16 (fontified t) 16 35 (fontified t) 35 36 (fontified t) 36 49 (fontified t) 49 52 (fontified t) 52 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 85 (fontified t) 85 88 (fontified t) 88 94 (fontified t) 94 96 (fontified t) 96 97 (fontified t) 97 107 (fontified t) 107 108 (fontified t) 108 118 (fontified t) 118 119 (rear-nonsticky t fontified t) 119 132 (fontified t) 132 143 (fontified t) 143 144 (fontified t) 144 146 (fontified t) 146 149 (fontified t) 149 168 (fontified t) 168 179 (fontified t) 179 180 (fontified t) 180 184 (fontified t) 184 185 (fontified t) 185 188 (fontified t) 188 190 (fontified t) 190 193 (fontified t) 193 204 (fontified t) 204 212 (fontified t) 212 215 (fontified t) 215 216 (fontified t) 216 224 (fontified t) 224 226 (fontified t) 226 229 (fontified t) 229 233 (fontified t) 233 248 (fontified t) 248 251 (fontified t) 251 252 (fontified t) 252 260 (fontified t) 260 262 (fontified t) 262 265 (fontified t) 265 269 (fontified t) 269 284 (fontified t) 284 287 (fontified t) 287 288 (fontified t) 288 296 (fontified t) 296 298 (fontified t) 298 301 (fontified t) 301 305 (fontified t) 305 320 (fontified t) 320 323 (fontified t) 323 324 (fontified t) 324 332 (fontified t) 332 338 (fontified t) 338 341 (fontified t) 341 345 (fontified t) 345 349 (fontified t) 349 350 (fontified t)) #("公共
性の高いシステムを数多く構築してきた実績を" 0 24 (fontified t)) #("これまでにも公共性
の高いシステムの構築に" 0 9 (fontified t) 9 10 (fontified t) 10 21 (fontified t)) #("私は，特に設計部分に携わり
たいと考えております．" 0 2 (fontified t) 2 3 (fontified t) 3 13 (fontified t) 13 14 (fontified t) 14 24 (fontified t) 24 25 (fontified t)) #("の設計" 0 3 (fontified t)) #("スマートシティの設計に挑戦したいです．街全体がシステム化領域であるとい
う規模の大きさと，重要インフラの構築に携われるというやりがいが魅力的だ
と感じるからです．街に住む人すべてがユーザであるため，障害が発生してし
まうと広範囲の人々に大きな影響を与えてしまいます．そのため，システムの
頑強性や拡張性に細心の注意を払う必要があり，大きなプレッシャーとなりま
すが，その分多くのノウハウと仕事の重要性を学ぶことができると思います．
さらに，スマートシティは様々な国で導入されると予想されるため，国内外を
問わず活躍できるような人材へと成長していけるという点にも挑戦する意義を
感じます．

" 0 108 (fontified t) 108 294 (fontified t) 294 295 (fontified t))))
(setq-default session-file-alist '(("~/Dropbox/etc/book_list/book_list.org" 910 nil 1 nil nil 1031 (overwrite-mode)) ("~/Dropbox/etc/company_information/company_info.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/job_hunting/NRI/es.org" 108 108 1 nil nil 648 (overwrite-mode)) ("~/Dropbox/job_hunting/FUTURE_Architect/es.org" 609 609 1 nil nil 609 (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/var/recentf" 13431 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/job_hunting/HITACHI/es.org" 1866 1866 1 nil nil 1866 (overwrite-mode)) ("~/Dropbox/job_hunting/NTTDATA/es.org" 1390 1095 1 nil nil nil (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/url/cookies" 507 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/elpa/helm-20140225.1146/helm-autoloads.el" 45062 nil 1 nil nil 45062 (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/elpa/org-20140224/org-loaddefs.el" 86900 nil 1 nil nil 86900 (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/elpa/helm-20140223.1212/helm-autoloads.el" 45055 nil 1 nil nil 45055 (overwrite-mode)) ("~/Dropbox/configure/.emacs.d/elpa/org-20140224/org-autoloads.el" 27239 nil 1 nil nil 27239 (overwrite-mode))))
(setq-default extended-command-history '("count-lines-region" "package-list-packages" "pascal-mode"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source--ff-file-name-history '((name . "File name history") (init lambda nil (with-helm-alive-p (when helm-ff-file-name-history-use-recentf (require (quote recentf)) (or recentf-mode (recentf-mode 1))))) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda (candidate) (helm-set-pattern (expand-file-name candidate)) (with-helm-after-update-hook (helm-exit-minibuffer))) ("Find file in helm" lambda (candidate) (helm-set-pattern (expand-file-name candidate))))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default minibuffer-history '("book" "comp" "future" "org " #("と思い志望しています．" 0 1 (fontified t) 1 10 (fontified t) 10 11 (fontified t)) #("ました．" 0 3 (fontified t) 3 4 (fontified t)) #("私は，貴社のフィールドを利用してスマートシティを実現したいです．街全体" 0 2 (fontified t) 2 3 (fontified t) 3 16 (fontified t) 16 35 (fontified t)) #("しています．" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) "org hitachi" "count line" "data" "or" "pa" "es nri" "package-list"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
